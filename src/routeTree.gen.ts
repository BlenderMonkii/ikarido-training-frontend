/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as LoginImport } from './routes/login'
import { Route as AboutImport } from './routes/about'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedSessionsIndexImport } from './routes/_authenticated/sessions/index'
import { Route as AuthenticatedExercisesIndexImport } from './routes/_authenticated/exercises/index'
import { Route as AuthenticatedSessionsSessionIdImport } from './routes/_authenticated/sessions/$sessionId'
import { Route as AuthenticatedSessionsCreateIndexImport } from './routes/_authenticated/sessions/create/index'
import { Route as AuthenticatedExercisesCreateIndexImport } from './routes/_authenticated/exercises/create/index'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedSessionsIndexRoute = AuthenticatedSessionsIndexImport.update(
  {
    id: '/sessions/',
    path: '/sessions/',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
)

const AuthenticatedExercisesIndexRoute =
  AuthenticatedExercisesIndexImport.update({
    id: '/exercises/',
    path: '/exercises/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedSessionsSessionIdRoute =
  AuthenticatedSessionsSessionIdImport.update({
    id: '/sessions/$sessionId',
    path: '/sessions/$sessionId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedSessionsCreateIndexRoute =
  AuthenticatedSessionsCreateIndexImport.update({
    id: '/sessions/create/',
    path: '/sessions/create/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedExercisesCreateIndexRoute =
  AuthenticatedExercisesCreateIndexImport.update({
    id: '/exercises/create/',
    path: '/exercises/create/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/sessions/$sessionId': {
      id: '/_authenticated/sessions/$sessionId'
      path: '/sessions/$sessionId'
      fullPath: '/sessions/$sessionId'
      preLoaderRoute: typeof AuthenticatedSessionsSessionIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/exercises/': {
      id: '/_authenticated/exercises/'
      path: '/exercises'
      fullPath: '/exercises'
      preLoaderRoute: typeof AuthenticatedExercisesIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/sessions/': {
      id: '/_authenticated/sessions/'
      path: '/sessions'
      fullPath: '/sessions'
      preLoaderRoute: typeof AuthenticatedSessionsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/exercises/create/': {
      id: '/_authenticated/exercises/create/'
      path: '/exercises/create'
      fullPath: '/exercises/create'
      preLoaderRoute: typeof AuthenticatedExercisesCreateIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/sessions/create/': {
      id: '/_authenticated/sessions/create/'
      path: '/sessions/create'
      fullPath: '/sessions/create'
      preLoaderRoute: typeof AuthenticatedSessionsCreateIndexImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedSessionsSessionIdRoute: typeof AuthenticatedSessionsSessionIdRoute
  AuthenticatedExercisesIndexRoute: typeof AuthenticatedExercisesIndexRoute
  AuthenticatedSessionsIndexRoute: typeof AuthenticatedSessionsIndexRoute
  AuthenticatedExercisesCreateIndexRoute: typeof AuthenticatedExercisesCreateIndexRoute
  AuthenticatedSessionsCreateIndexRoute: typeof AuthenticatedSessionsCreateIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedSessionsSessionIdRoute: AuthenticatedSessionsSessionIdRoute,
  AuthenticatedExercisesIndexRoute: AuthenticatedExercisesIndexRoute,
  AuthenticatedSessionsIndexRoute: AuthenticatedSessionsIndexRoute,
  AuthenticatedExercisesCreateIndexRoute:
    AuthenticatedExercisesCreateIndexRoute,
  AuthenticatedSessionsCreateIndexRoute: AuthenticatedSessionsCreateIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/sessions/$sessionId': typeof AuthenticatedSessionsSessionIdRoute
  '/exercises': typeof AuthenticatedExercisesIndexRoute
  '/sessions': typeof AuthenticatedSessionsIndexRoute
  '/exercises/create': typeof AuthenticatedExercisesCreateIndexRoute
  '/sessions/create': typeof AuthenticatedSessionsCreateIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/sessions/$sessionId': typeof AuthenticatedSessionsSessionIdRoute
  '/exercises': typeof AuthenticatedExercisesIndexRoute
  '/sessions': typeof AuthenticatedSessionsIndexRoute
  '/exercises/create': typeof AuthenticatedExercisesCreateIndexRoute
  '/sessions/create': typeof AuthenticatedSessionsCreateIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/_authenticated/sessions/$sessionId': typeof AuthenticatedSessionsSessionIdRoute
  '/_authenticated/exercises/': typeof AuthenticatedExercisesIndexRoute
  '/_authenticated/sessions/': typeof AuthenticatedSessionsIndexRoute
  '/_authenticated/exercises/create/': typeof AuthenticatedExercisesCreateIndexRoute
  '/_authenticated/sessions/create/': typeof AuthenticatedSessionsCreateIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about'
    | '/login'
    | '/register'
    | '/sessions/$sessionId'
    | '/exercises'
    | '/sessions'
    | '/exercises/create'
    | '/sessions/create'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/about'
    | '/login'
    | '/register'
    | '/sessions/$sessionId'
    | '/exercises'
    | '/sessions'
    | '/exercises/create'
    | '/sessions/create'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/about'
    | '/login'
    | '/register'
    | '/_authenticated/sessions/$sessionId'
    | '/_authenticated/exercises/'
    | '/_authenticated/sessions/'
    | '/_authenticated/exercises/create/'
    | '/_authenticated/sessions/create/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AboutRoute: typeof AboutRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AboutRoute: AboutRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/about",
        "/login",
        "/register"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/sessions/$sessionId",
        "/_authenticated/exercises/",
        "/_authenticated/sessions/",
        "/_authenticated/exercises/create/",
        "/_authenticated/sessions/create/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/_authenticated/sessions/$sessionId": {
      "filePath": "_authenticated/sessions/$sessionId.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/exercises/": {
      "filePath": "_authenticated/exercises/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/sessions/": {
      "filePath": "_authenticated/sessions/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/exercises/create/": {
      "filePath": "_authenticated/exercises/create/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/sessions/create/": {
      "filePath": "_authenticated/sessions/create/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
